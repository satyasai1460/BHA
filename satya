#!/bin/bash

# Color codes
GREEN='\033[0;32m'
RESET='\033[0m'

# Telegram Bot Configuration
BOT_TOKEN="BOT_TOKEN"
CHAT_ID="CHAT_ID"

# Function to send Telegram notification
send_telegram_notification() {
    local message=$1
    curl -s -X POST "https://api.telegram.org/bot$BOT_TOKEN/sendMessage" \
        -d chat_id="$CHAT_ID" \
        -d text="$message" \
        -d parse_mode="Markdown" > /dev/null 2>&1
}

# Initialize progress
TOTAL_STEPS=7
CURRENT_STEP=0

# Increment progress and send an update
update_progress() {
    ((CURRENT_STEP++))
    local percentage=$((CURRENT_STEP * 100 / TOTAL_STEPS))
    send_telegram_notification "🚧 Progress: Step $CURRENT_STEP/$TOTAL_STEPS completed ($percentage%)"
}

echo "Enter the Target domain (example.com):"
read target

# Notify that the process has started
send_telegram_notification "🚀 Process started for the target: *$target*"

# Step 1: Subfinder
send_telegram_notification "🔍 Starting Subfinder for target: *$target*"
subfinder -d "$target" -o "$target.txt"
update_progress

# Step 2: Assetfinder
send_telegram_notification "🔍 Starting Assetfinder for target: *$target*"
assetfinder --subs-only "$target" | tee "${target}2.txt"
update_progress

# Step 3: Combine Subdomains
send_telegram_notification "📂 Combining subdomains into a main file"
cat "$target.txt" "${target}2.txt" >> "main$target.txt"
update_progress

# Step 4: Nuclei Scan
send_telegram_notification "🔎 Starting Nuclei scan for target: *$target*"

# Run nuclei with real-time output to the terminal and save results to a file
nuclei -nc -l "main$target.txt" -t /root/nuclei-templates | tee "nuclei$target.txt" |
    while IFS= read -r line; do
        # Print Nuclei output in real time to the terminal
        echo "$line"

        # Check for vulnerabilities with specific severities
        if echo "$line" | grep -q -E "critical|high|medium|low"; then
            severity=$(echo "$line" | grep -oE "critical|high|medium|low" | tr '[:lower:]' '[:upper:]')
            bug_url=$(echo "$line")
            send_telegram_notification "⚠️ *Nuclei detected vulnerabilities*
*Severity*: $severity

*Bug URL*: $bug_url"
        fi
    done
update_progress

# Step 5: Live URLs with HTTPX
send_telegram_notification "🌐 Checking live URLs with HTTPX"
cat "main$target.txt" | httpx -mc 200 | tee "live$target.txt"
update_progress

# Step 6: Naabu Port Scan
send_telegram_notification "🚪 Starting Naabu port scan for live URLs"
naabu -list "live$target.txt" -top-ports 1000 -exclude-ports 80,443 -o "naabu$target.txt"
update_progress

# Step 7: Wayback URLs and JS Analysis
send_telegram_notification "📜 Extracting Wayback URLs and analyzing JavaScript files"
cat "live$target.txt" | waybackurls | tee "$target-waybackdata.txt"
cat "$target-waybackdata.txt" | grep ".js$" | tee -a "livejs.txt"

# Notify for JavaScript vulnerabilities
stdbuf -oL nuclei -l "livejs.txt" -t /root/nuclei-templates/http/exposures/ | tee -a "jsbug.txt" |
    while IFS= read -r js_line; do
        if echo "$js_line" | grep -q -E "critical|high|medium|low"; then
            severity=$(echo "$js_line" | grep -oE "critical|high|medium|low" | tr '[:lower:]' '[:upper:]')
            js_bug_url=$(echo "$js_line")
            send_telegram_notification "🐛 *JS Vulnerability Found*
*Severity*: $severity

*Bug URL*: $js_bug_url"
        fi
    done
update_progress

# Final notification
send_telegram_notification "🎉 Task completed for target: *$target*"
echo -e "${GREEN}Task completed${RESET}"
